name: 'main workflow'

on:
  push:
    branches: '*'

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # Arm-based Macs (M1 & above)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # Intel-based Macs
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # Linux
            args: ''
          - platform: 'windows-latest' # Windows
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Linux-only dependencies
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'yarn' # Can change to 'npm' or 'pnpm' if necessary

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Fix Rust environment setup (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          echo "Reloading Rust environment variables..."
          Invoke-Expression "$env:USERPROFILE\.cargo\env"
        shell: pwsh

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          key: rust-cache-${{ github.run_id }}

      - name: Verify yarn.lock exists
        run: |
          if [ ! -f yarn.lock ]; then
            echo "‚ùå ERROR: yarn.lock file not found!"
            exit 1
          fi
        shell: bash

      - name: Install frontend dependencies
        run: yarn install # Change to `npm install` if using npm
        continue-on-error: false

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
